a<-5
a2<-5L
aVector<-c(5,6,7)
a2Vector<-c(5L,6L,7L)
b<-"你好"
a<-5
a2<-5L
aVector<-c(5,6,7)
a2Vector<-c(5L,6L,7L)
b<-"你好"
bVector<-c("你好","How are you?")
num1<-1
num2<-100
num1+num2
num1-num2
num1-num2
num1*num2
num1<-1.568
num2<-2.121
round(num1,digits = 2)
num1<-1.568
num2<-2.121
round(num1,digits = 2) -> roundnum1
b <-"'你好'"
b <-"'你好'"
b4<-"\"hi"\"
b <-"'你好'"
b4 <-"\"你好"\"
b2 <-"'你好'"
a<-5
a2<-5L
aVector<-c(5,6,7)
a2Vector<-c(5L,6L,7L)
b<-"你好"
bVector<-c("你好","How are you?")
x <- 10
class(x) # "numeric"
oldClass(x) # NULL
inherits(x, "a") #FALSE
class(x) <- c("a", "b")
inherits(x,"a") #TRUE
inherits(x, "a", TRUE) # 1
inherits(x, c("a", "b", "c"), TRUE) # 1 2 0
?round
round(2.3875)
round(2.3875, digits = 2)
library(readr)
install.packages("readr")
install.packages(c("dplyr", "magrittr"))
install.packages("readr")
?ymd
??ymd
?ymd
?ymd
?ymd
?ymd
?ymd
?ymd
??ymd
?ymd
??ymd
?ymd
?ymd
?ymd()
?ymd
?ymd
class(classSurvey)
install.packages("googlesheets")
classSurvey<-gs_read(gsSurvey,ws=1)
classSurvey<-gs_read(gsSurvey,ws=1)
clasStuDF <- data.frame(
StuID=c(1,2,3,4,5),
name=c("小明","大雄","胖虎","小新","大白"),
score=c(80,60,90,70,50)
)
StuDF s(classSurvey)
clasStuDF <- data.frame(
StuID=c(1,2,3,4,5),
name=c("小明","大雄","胖虎","小新","大白"),
score=c(80,60,90,70,50)
)
names(StuDF)
library(lubridate)
library(stringr)
library(googlesheets)
gs_auth(new_user = TRUE)
gsSurvey<-gs_key("1mC9bnxj11NCNoOCw0Vmn4nxERbHtLjeGo9v9C9b2GDE")  #download sheet information as an object
classSurvey<-gs_read(gsSurvey,ws=1) #access the 1st worksheet
class(classSurvey)
StuDF <- data.frame(
StuID=c(1,2,3,4,5),
name=c("小明","大雄","胖虎","小新","大白"),
score=c(80,60,90,70,50)
)
StuDF
as.character(StuDF$name) -> StuDF$name
StuDF <- data.frame(
StuID=c(1,2,3,4,5),
name=c("小明","大雄","胖虎","小新","大白"),
score=c(80,60,90,70,50),
stringsAsFactors = F
)
StuDF
names(StuDF)
colnames(StuDF)
rownames(StuDF)
(StuDF$score >= 80)
(StuDF$name=="小新")
StuDF[c(1,4),]
StuDF[-c(1,4),]
View(classSurvey)
StuDF[1,2]
StuDF[,2]
StuDF[1,]
StuDF[c(1,4),]
StuDF[c(1,4),c(2,3)]
View(StuDF)
StuDF[1,2]
StuDF[,2]
StuDF[1,]
StuDF[c(1,4),]
StuDF[c(1,4),c(2,3)]
StuDF[1,2]
#StuDF[,2]
#StuDF[1,]
#StuDF[c(1,4),]
#StuDF[c(1,4),c(2,3)]
#StuDF[1,2]
StuDF[,2]
#StuDF[1,]
#StuDF[c(1,4),]
#StuDF[c(1,4),c(2,3)]
#StuDF[1,2]
#StuDF[,2]
#StuDF[1,]
StuDF[c(1,4),]
#StuDF[c(1,4),c(2,3)]
StuDF[1,2]
StuDF[,2]
StuDF[1,]
StuDF[c(1,4),]
StuDF[c(1,4),c(2,3)]
StuDF[1,2]
#StuDF[,2]
#StuDF[1,]
#StuDF[c(1,4),]
#StuDF[c(1,4),c(2,3)]
StuDF[c(1,4),]
#StuDF[-c(1,4),]
StuDF[1,2]
#StuDF[,2]
#StuDF[1,]
#StuDF[c(1,4),]
#StuDF[c(1,4),c(2,3)]
#StuDF[c(1,4),]
StuDF[-c(1,4),]
#StuDF[c(1,4),]
StuDF[-c(1,4),]
#StuDF[c(1,4),]
StuDF[-c(1,4),]
StuDF[c(1,4),]
#StuDF[-c(1,4),]
StuDF[c(1,4),]
#StuDF[-c(1,4),]
#StuDF[c(1,4),]
StuDF[-c(1,4),]
StuDF[1,2]
#StuDF[,2]
#StuDF[1,]
#StuDF[c(1,4),]
#StuDF[c(1,4),c(2,3)]
StuDF[c(T,F,F,F,F),c(F,T,F)]
StuDF[c(T,F,F,T,F),]
a<-c(T,T,F,F,T,F,F)
sum(a)
?c
c(1,7:9)
c(1:5, 10.5, "next")
StuDF[c(T,F,F,F,F),c(F,T,F)]
StuDF[c(T,F,F,T,F),]
(StuDF$score >= 80)
(StuDF$name == "小新")
a<-c(T,T,F,F,T,F,F)
sum(a)
a<-c(T,T,F,F,T,F,F)
sum(a)
a<-c(T,T,F,F,T,F,F)
#sum(a)
a<-c(T,T,F,F,T,F,F)
sum(a)
StuDF[c(T,F,F,F,F),c(F,T,F)]
StuDF[c(T,F,F,T,F),]
(StuDF$score >= 80)
(StuDF$name == "小新")
as.character(StuDF$name) -> StuDF$name
(StuDF$score >= 80)
(StuDF$name == "小新")
as.character(StuDF$name) -> StuDF$name
(StuDF$score >= 80)
(StuDF$name == "小新")
as.vector(StuDF$name) -> StuDF$name
?which
which(LETTERS == "R")
which(ll <- c(TRUE, FALSE, TRUE, NA, FALSE, FALSE, TRUE)) #> 1 3 7
names(ll) <- letters[seq(ll)]
which(ll)
which((1:12)%%2 == 0) # which are even?
which(1:10 > 3, arr.ind = TRUE)
(StuDF$score >= 80)
(StuDF$name == "小新")
which(StuDF$name)
(StuDF$score >= 80)
(StuDF$name == "小新")
StuDF[which(StuDF$score>=80),2]
StuDF[c(1,3),2]
StuDF[(StuDF$score>=80),2]
StuDF[c(T,F,T,F,F),2]
StuDF[which(StuDF$name == "小新"),3]
(StuDF$score >= 80)
(StuDF$name == "小新")
StuDF[which(StuDF$score>=80)]
StuDF[c(1,3),2]
StuDF[(StuDF$score>=80),2]
StuDF[c(T,F,T,F,F),2]
StuDF[which(StuDF$name == "小新"),3]
(StuDF$score >= 80)
(StuDF$name == "小新")
StuDF[which(StuDF$score>=80),2]
StuDF[c(1,3),2]
StuDF[(StuDF$score>=80),2]
StuDF[c(T,F,T,F,F),2]
StuDF[which(StuDF$name == "小新"),3]
(StuDF$score >= 80)
(StuDF$name == "小新")
StuDF[which(StuDF$score>=80)]
StuDF[c(1,3),2]
StuDF[(StuDF$score>=80),2]
StuDF[c(T,F,T,F,F),2]
StuDF[which(StuDF$name == "小新"),3]
(StuDF$score >= 80)
(StuDF$name == "小新")
StuDF[which(StuDF$score>=80),2]
StuDF[c(1,3),2]
StuDF[(StuDF$score>=80),2]
StuDF[c(T,F,T,F,F),2]
StuDF[which(StuDF$name == "小新"),3]
(classSurvey$性別 == "男")
(classSurvey$本學期學分數 > 20)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
View(classSurvey)
(classSurvey$性別 == "男")
(classSurvey$本學期學分數 > 20)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
aa<-(classSurvey$性別 == "男")
bb<-(classSurvey$本學期學分數 > 20)
cc<-(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
aa<-(classSurvey$性別 == "男")
bb<-(classSurvey$本學期學分數 > 20)
cc<-(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
cbind(aa,bb,cc)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
#as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
str_split(classSurvey$居住地行政區 == 台北市)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
classSurvey[which(classSurvey$性別=='男') | classSurvey$本學期學分數>26,2]
#as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
classSurvey[which(classSurvey$性別=='男') | classSurvey$本學期學分數>26,3]
#as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
aa<-(classSurvey$性別 == "男")
bb<-(classSurvey$本學期學分數 > 20)
cc<-(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
cbind(aa,bb,cc)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
classSurvey[which(classSurvey$性別=='男') | classSurvey$本學期學分數>26,3]
as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
classSurvey[which(classSurvey$性別=='男') | classSurvey$本學期學分數>26,3]
#as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
classSurvey[which(classSurvey$性別=='男') | classSurvey$本學期學分數>26,3]
#as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
aaa<-c(3,7,9,10)
aaa[3]
StuDF$StuID
StuDF[,c("StuID")]
StuDF$name
StuDF[,c("name")]
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
#classSurvey[which(classSurvey$性別=='男') | classSurvey$本學期學分數>26,3]
#as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
aa<-(classSurvey$性別 == "男")
bb<-(classSurvey$本學期學分數 > 20)
cc<-(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
cbind(aa,bb,cc)
aa<-(classSurvey$性別 == "男")
bb<-(classSurvey$本學期學分數 > 20)
cc<-(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
#cbind(aa,bb,cc)
library(stringr)
str_c(letters,LETTERS)
str_c(letters,LETTERS,sep="-")
str_c("lowercase: ", letters, ", capital: ", LETTERS)
str_split_fixed()
aa<-(classSurvey$性別 == "男")
bb<-(classSurvey$本學期學分數 > 20)
cc<-(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
#cbind(aa,bb,cc)
aa<-(classSurvey$性別 == "男")
bb<-(classSurvey$本學期學分數 > 20)
cc<-(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
cbind(aa,bb,cc)
StuDF[,c("StuID","name")]
## 無法用$一次取兩個元素
# StuDF$c("StuID","name")
StuDF[,c("StuID","name")]
## 無法用$一次取兩個元素
# StuDF$c("StuID","name")
StuDF[c(1,4),c(2)]
StuDF[,c(2)][c(1,4)]
## the second one is equivalent to
StuDF[,c(2)] -> aa
aa[c(1,4)]
StuDF[,c(1,3)][c(1,4)]
#StuDF[,c(1,3)][c(1,4)]
StuDF[, c(1, 3)], c(1, 4))
StuDF[,c(1,3)],[c(1,4)]
StuDF[,c(1,3)]
[c(1,4)]
StuDF[,c(1,3)][c(1,4),]
names(StuDF)
names(StuDF) <- c("學號","姓名","成績")
names(StuDF)
library(readr)
student <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv")
library(dplyr)
library(magrittr)
student %<>% mutate(
身高級距=cut(身高,c(0,150,155,160,165,170,175,180,185,200)))
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(readr)
student <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv")
library(dplyr)
install.packages("dplyr", dependencies = FALSE)
library(readr)
student <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv")
library(dplyr)
StuDF$成績[c(4)]
StuDF$成績[c(4)] <- 75
install.packages("dplyr")
library(readr)
student <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv")
library(dplyr)
library(magrittr)
student %<>% mutate(
身高級距=cut(身高,c(0,150,155,160,165,170,175,180,185,200)))
StuDF$成績[c(4)]
StuDF$成績[c(4)] <- 75
student$新身高級距 <- student$身高級距
student$新身高級距 <- student$身高級距
View(StuDF)
View(StuDF)
View(student)
View(gsSurvey)
View(classSurvey)
dim(classSurvey)
library(googlesheets)
#gs_auth(new_user = TRUE)
gsSurvey<-gs_key("1mC9bnxj11NCNoOCw0Vmn4nxERbHtLjeGo9v9C9b2GDE")  #download sheet information as an object
classSurvey<-gs_read(gsSurvey,ws=1) #access the 1st worksheet
library(googlesheets)
#gs_auth(new_user = TRUE)
gsSurvey<-gs_key("1mC9bnxj11NCNoOCw0Vmn4nxERbHtLjeGo9v9C9b2GDE")  #download sheet information as an object
classSurvey<-gs_read(gsSurvey,ws=1) #access the 1st worksheet
dim(classSurvey)
nrow(classSurvey)
ncol(classSurvey)
class(classSurvey$學號)
# 學號轉成character
# 學號取出字串第2-4位 存成 年級
# 年級 轉 factor
# 年級進行 generic replacement
dim(classSurvey)
nrow(classSurvey)
ncol(classSurvey)
library(googlesheets)
#gs_auth(new_user = TRUE)
gsSurvey<-gs_key("1mC9bnxj11NCNoOCw0Vmn4nxERbHtLjeGo9v9C9b2GDE")  #download sheet information as an object
classSurvey<-gs_read(gsSurvey,ws=1) #access the 1st worksheet
dim(classSurvey)
nrow(classSurvey)
ncol(classSurvey)
library(googlesheets)
#gs_auth(new_user = TRUE)
gsSurvey<-gs_key("1mC9bnxj11NCNoOCw0Vmn4nxERbHtLjeGo9v9C9b2GDE")  #download sheet information as an object
classSurvey<-gs_read(gsSurvey,ws=1) #access the 1st worksheet
class(classSurvey$學號)
# 學號轉成character
classSurvey$學號 <- as.character(classSurvey$學號)
# 學號取出字串第2-4位 存成 年級
library(stringr)
classSurvey$年級 <- str_sub(classSurvey$學號,2,4)
# 年級 轉 factor
classSurvey$年級 <- as.factor(classSurvey$年級)
# 年級進行 generic replacement
levels(classSurvey$年級) <- c("大四及以上","大三","大二","大一")
class(classSurvey$學號)
# 學號轉成character
classSurvey$學號 <- as.character(classSurvey$學號)
# 學號取出字串第2-4位 存成 年級
library(stringr)
classSurvey$年級 <- str_sub(classSurvey$學號,2,4)
# 年級 轉 factor
classSurvey$年級 <- as.factor(classSurvey$年級)
# 年級進行 generic replacement
levels(classSurvey$年級) <- c("大四及以上","大三","大二","大一")
freshActivity<-
classSurvey$本學期目前已參加之課外活動[(classSurvey$年級=="大一")]
freshActivity<-
classSurvey$本學期目前已參加之課外活動[(classSurvey$年級=="大一")]
library(stringr)
str_split_fixed(freshActivity,",",n=5)->aa
str_c(aa)
freshActivity<-
classSurvey$本學期目前已參加之課外活動[(classSurvey$年級=="大一")]
library(stringr)
str_split_fixed(freshActivity,",",n=5)->aa
str_c(aa)->bb
library(stringr)
str_c(letters,LETTERS)
str_c(letters,LETTERS,sep="-")
str_c("lowercase: ", letters, ", capital: ", LETTERS)
str_split_fixed()
freshActivity<-
classSurvey$本學期目前已參加之課外活動[(classSurvey$年級=="大一")]
library(stringr)
str_split_fixed(freshActivity,",",n=5)->aa
str_c(aa)->bb
freshActivity<-
classSurvey$本學期目前已參加之課外活動[(classSurvey$年級=="大一")]
library(stringr)
str_split_fixed(freshActivity,",",n=5)->aa
#str_c(aa)->bb
freshActivity<-
classSurvey$本學期目前已參加之課外活動[(classSurvey$年級=="大一")]
library(stringr)
str_split_fixed(freshActivity,",",n=5)->aa
str_c(aa)->bb
View(StuDF)
View(gsSurvey)
View(classSurvey)
