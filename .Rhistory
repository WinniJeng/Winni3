StuDF[(StuDF$score>=80),2]
StuDF[c(T,F,T,F,F),2]
StuDF[which(StuDF$name == "小新"),3]
(StuDF$score >= 80)
(StuDF$name == "小新")
StuDF[which(StuDF$score>=80)]
StuDF[c(1,3),2]
StuDF[(StuDF$score>=80),2]
StuDF[c(T,F,T,F,F),2]
StuDF[which(StuDF$name == "小新"),3]
(StuDF$score >= 80)
(StuDF$name == "小新")
StuDF[which(StuDF$score>=80),2]
StuDF[c(1,3),2]
StuDF[(StuDF$score>=80),2]
StuDF[c(T,F,T,F,F),2]
StuDF[which(StuDF$name == "小新"),3]
(StuDF$score >= 80)
(StuDF$name == "小新")
StuDF[which(StuDF$score>=80)]
StuDF[c(1,3),2]
StuDF[(StuDF$score>=80),2]
StuDF[c(T,F,T,F,F),2]
StuDF[which(StuDF$name == "小新"),3]
(StuDF$score >= 80)
(StuDF$name == "小新")
StuDF[which(StuDF$score>=80),2]
StuDF[c(1,3),2]
StuDF[(StuDF$score>=80),2]
StuDF[c(T,F,T,F,F),2]
StuDF[which(StuDF$name == "小新"),3]
(classSurvey$性別 == "男")
(classSurvey$本學期學分數 > 20)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
View(classSurvey)
(classSurvey$性別 == "男")
(classSurvey$本學期學分數 > 20)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
aa<-(classSurvey$性別 == "男")
bb<-(classSurvey$本學期學分數 > 20)
cc<-(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
aa<-(classSurvey$性別 == "男")
bb<-(classSurvey$本學期學分數 > 20)
cc<-(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
cbind(aa,bb,cc)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
#as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
str_split(classSurvey$居住地行政區 == 台北市)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
classSurvey[which(classSurvey$性別=='男') | classSurvey$本學期學分數>26,2]
#as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
classSurvey[which(classSurvey$性別=='男') | classSurvey$本學期學分數>26,3]
#as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
aa<-(classSurvey$性別 == "男")
bb<-(classSurvey$本學期學分數 > 20)
cc<-(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
cbind(aa,bb,cc)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
classSurvey[which(classSurvey$性別=='男') | classSurvey$本學期學分數>26,3]
as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
classSurvey[which(classSurvey$性別=='男') | classSurvey$本學期學分數>26,3]
#as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
classSurvey[which(classSurvey$性別=='男') | classSurvey$本學期學分數>26,3]
#as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
aaa<-c(3,7,9,10)
aaa[3]
StuDF$StuID
StuDF[,c("StuID")]
StuDF$name
StuDF[,c("name")]
library(stringr)
(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 26)
#classSurvey[which(classSurvey$性別=='男') | classSurvey$本學期學分數>26,3]
#as. stringr::str_split(classSurvey$居住地行政區 == 台北市)
aa<-(classSurvey$性別 == "男")
bb<-(classSurvey$本學期學分數 > 20)
cc<-(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
cbind(aa,bb,cc)
aa<-(classSurvey$性別 == "男")
bb<-(classSurvey$本學期學分數 > 20)
cc<-(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
#cbind(aa,bb,cc)
library(stringr)
str_c(letters,LETTERS)
str_c(letters,LETTERS,sep="-")
str_c("lowercase: ", letters, ", capital: ", LETTERS)
str_split_fixed()
aa<-(classSurvey$性別 == "男")
bb<-(classSurvey$本學期學分數 > 20)
cc<-(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
#cbind(aa,bb,cc)
aa<-(classSurvey$性別 == "男")
bb<-(classSurvey$本學期學分數 > 20)
cc<-(classSurvey$性別 == "男" |
classSurvey$本學期學分數 > 20)
cbind(aa,bb,cc)
StuDF[,c("StuID","name")]
## 無法用$一次取兩個元素
# StuDF$c("StuID","name")
StuDF[,c("StuID","name")]
## 無法用$一次取兩個元素
# StuDF$c("StuID","name")
StuDF[c(1,4),c(2)]
StuDF[,c(2)][c(1,4)]
## the second one is equivalent to
StuDF[,c(2)] -> aa
aa[c(1,4)]
StuDF[,c(1,3)][c(1,4)]
#StuDF[,c(1,3)][c(1,4)]
StuDF[, c(1, 3)], c(1, 4))
StuDF[,c(1,3)],[c(1,4)]
StuDF[,c(1,3)]
[c(1,4)]
StuDF[,c(1,3)][c(1,4),]
names(StuDF)
names(StuDF) <- c("學號","姓名","成績")
names(StuDF)
library(readr)
student <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv")
library(dplyr)
library(magrittr)
student %<>% mutate(
身高級距=cut(身高,c(0,150,155,160,165,170,175,180,185,200)))
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(readr)
student <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv")
library(dplyr)
install.packages("dplyr", dependencies = FALSE)
library(readr)
student <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv")
library(dplyr)
StuDF$成績[c(4)]
StuDF$成績[c(4)] <- 75
install.packages("dplyr")
library(readr)
student <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv")
library(dplyr)
library(magrittr)
student %<>% mutate(
身高級距=cut(身高,c(0,150,155,160,165,170,175,180,185,200)))
StuDF$成績[c(4)]
StuDF$成績[c(4)] <- 75
student$新身高級距 <- student$身高級距
student$新身高級距 <- student$身高級距
View(StuDF)
View(StuDF)
View(student)
View(gsSurvey)
View(classSurvey)
dim(classSurvey)
library(googlesheets)
#gs_auth(new_user = TRUE)
gsSurvey<-gs_key("1mC9bnxj11NCNoOCw0Vmn4nxERbHtLjeGo9v9C9b2GDE")  #download sheet information as an object
classSurvey<-gs_read(gsSurvey,ws=1) #access the 1st worksheet
library(googlesheets)
#gs_auth(new_user = TRUE)
gsSurvey<-gs_key("1mC9bnxj11NCNoOCw0Vmn4nxERbHtLjeGo9v9C9b2GDE")  #download sheet information as an object
classSurvey<-gs_read(gsSurvey,ws=1) #access the 1st worksheet
dim(classSurvey)
nrow(classSurvey)
ncol(classSurvey)
class(classSurvey$學號)
# 學號轉成character
# 學號取出字串第2-4位 存成 年級
# 年級 轉 factor
# 年級進行 generic replacement
dim(classSurvey)
nrow(classSurvey)
ncol(classSurvey)
library(googlesheets)
#gs_auth(new_user = TRUE)
gsSurvey<-gs_key("1mC9bnxj11NCNoOCw0Vmn4nxERbHtLjeGo9v9C9b2GDE")  #download sheet information as an object
classSurvey<-gs_read(gsSurvey,ws=1) #access the 1st worksheet
dim(classSurvey)
nrow(classSurvey)
ncol(classSurvey)
library(googlesheets)
#gs_auth(new_user = TRUE)
gsSurvey<-gs_key("1mC9bnxj11NCNoOCw0Vmn4nxERbHtLjeGo9v9C9b2GDE")  #download sheet information as an object
classSurvey<-gs_read(gsSurvey,ws=1) #access the 1st worksheet
class(classSurvey$學號)
# 學號轉成character
classSurvey$學號 <- as.character(classSurvey$學號)
# 學號取出字串第2-4位 存成 年級
library(stringr)
classSurvey$年級 <- str_sub(classSurvey$學號,2,4)
# 年級 轉 factor
classSurvey$年級 <- as.factor(classSurvey$年級)
# 年級進行 generic replacement
levels(classSurvey$年級) <- c("大四及以上","大三","大二","大一")
class(classSurvey$學號)
# 學號轉成character
classSurvey$學號 <- as.character(classSurvey$學號)
# 學號取出字串第2-4位 存成 年級
library(stringr)
classSurvey$年級 <- str_sub(classSurvey$學號,2,4)
# 年級 轉 factor
classSurvey$年級 <- as.factor(classSurvey$年級)
# 年級進行 generic replacement
levels(classSurvey$年級) <- c("大四及以上","大三","大二","大一")
freshActivity<-
classSurvey$本學期目前已參加之課外活動[(classSurvey$年級=="大一")]
freshActivity<-
classSurvey$本學期目前已參加之課外活動[(classSurvey$年級=="大一")]
library(stringr)
str_split_fixed(freshActivity,",",n=5)->aa
str_c(aa)
freshActivity<-
classSurvey$本學期目前已參加之課外活動[(classSurvey$年級=="大一")]
library(stringr)
str_split_fixed(freshActivity,",",n=5)->aa
str_c(aa)->bb
library(stringr)
str_c(letters,LETTERS)
str_c(letters,LETTERS,sep="-")
str_c("lowercase: ", letters, ", capital: ", LETTERS)
str_split_fixed()
freshActivity<-
classSurvey$本學期目前已參加之課外活動[(classSurvey$年級=="大一")]
library(stringr)
str_split_fixed(freshActivity,",",n=5)->aa
str_c(aa)->bb
freshActivity<-
classSurvey$本學期目前已參加之課外活動[(classSurvey$年級=="大一")]
library(stringr)
str_split_fixed(freshActivity,",",n=5)->aa
#str_c(aa)->bb
freshActivity<-
classSurvey$本學期目前已參加之課外活動[(classSurvey$年級=="大一")]
library(stringr)
str_split_fixed(freshActivity,",",n=5)->aa
str_c(aa)->bb
View(StuDF)
View(gsSurvey)
View(classSurvey)
View(student)
View(StuDF)
library(stringr)
str_c(letters,LETTERS)
str_c(letters,LETTERS,sep="-")
str_c("lowercase: ", letters, ", capital: ", LETTERS)
str_split_fixed()
knitr::opts_chunk$set(echo = TRUE)
collegeData$學校代碼<-as.factor(collegeData$學校代碼)
?mutate
install.packages("mutate", dependencies = FALSE)
?mutate
library(readr)
cl<-locale(grouping_mark = ",") # 創造cl來描述千分位符號使用","的習慣場景
collegeData %>%
mutate(
`日間∕進修別`=as.factor(`日間∕進修別`),
等級別=as.factor(等級別),
一年級男生=parse_number(一年級男生,locale=cl),
一年級女生=parse_number(一年級女生,locale=cl)
) -> collegeData4
library(readr)
cl<-locale(grouping_mark = ",") # 創造cl來描述千分位符號使用","的習慣場景
collegeData %>%
mutate(
`日間∕進修別`=as.factor(`日間∕進修別`),
等級別=as.factor(等級別),
一年級男生=parse_number(一年級男生,locale=cl),
一年級女生=parse_number(一年級女生,locale=cl)
) -> collegeData4
library(readr)
cl<-locale(grouping_mark = ",") # 創造cl來描述千分位符號使用","的習慣場景
collegeData %>%
mutate(
`日間∕進修別`=as.factor(`日間∕進修別`),
等級別=as.factor(等級別),
一年級男生=parse_number(一年級男生,locale=cl),
一年級女生=parse_number(一年級女生,locale=cl)
) -> collegeData4
library(readr)
cl<-locale(grouping_mark = ",") # 創造cl來描述千分位符號使用","的習慣場景
collegeData %>%
mutate(
`日間∕進修別`=as.factor(`日間∕進修別`),
等級別=as.factor(等級別),
一年級男生=parse_number(一年級男生,locale=cl),
一年級女生=parse_number(一年級女生,locale=cl)
) -> collegeData4
library(stringr)
collegeData %>%
mutate( #將字串轉成數值
一年級男生=str_replace(一年級男生,",",""),
一年級女生=str_replace(一年級女生,",","")
) %>%
mutate(
一年級男生=as.numeric(一年級男生),
一年級女生=as.numeric(一年級女生)
) -> collegeData3
library(dplyr)
collegeData %>%
mutate( #將所有逗號拿掉
`日間∕進修別`=as.factor(`日間∕進修別`),
等級別=as.factor(等級別),
一年級男生=as.numeric(一年級男生),
一年級女生=as.numeric(一年級女生)
) ->
collegeData2
library(readr)
collegeData <- read_csv("https://quality.data.gov.tw/dq_download_csv.php?nid=6231&md5_url=dda8fca407131483c1d8cbf3d61cf793")
library(readr)
cl<-locale(grouping_mark = ",") # 創造cl來描述千分位符號使用","的習慣場景
collegeData %>%
mutate(
`日間∕進修別`=as.factor(`日間∕進修別`),
等級別=as.factor(等級別),
一年級男生=parse_number(一年級男生,locale=cl),
一年級女生=parse_number(一年級女生,locale=cl)
) -> collegeData4
library(stringr)
collegeData %>%
mutate( #將字串轉成數值
一年級男生=str_replace(一年級男生,",",""),
一年級女生=str_replace(一年級女生,",","")
) %>%
mutate(
一年級男生=as.numeric(一年級男生),
一年級女生=as.numeric(一年級女生)
) -> collegeData3
library(dplyr)
collegeData %>%
mutate( #將所有逗號拿掉
`日間∕進修別`=as.factor(`日間∕進修別`),
等級別=as.factor(等級別),
一年級男生=as.numeric(一年級男生),
一年級女生=as.numeric(一年級女生)
) ->
collegeData2
library(dplyr)
collegeData %>%
mutate(
`日間∕進修別`=as.factor(`日間∕進修別`),
等級別=as.factor(等級別),
一年級男生=as.numeric(一年級男生),
一年級女生=as.numeric(一年級女生)
) ->
collegeData2
library(stringr)
collegeData %>%
mutate( #將字串轉成數值
一年級男生=str_replace(一年級男生,",",""),
一年級女生=str_replace(一年級女生,",","")
) %>%
mutate(
一年級男生=as.numeric(一年級男生),
一年級女生=as.numeric(一年級女生)
) -> collegeData3
library(readr)
cl<-locale(grouping_mark = ",") # 創造cl來描述千分位符號使用","的習慣場景
collegeData %>%
mutate(
`日間∕進修別`=as.factor(`日間∕進修別`),
等級別=as.factor(等級別),
一年級男生=parse_number(一年級男生,locale=cl),
一年級女生=parse_number(一年級女生,locale=cl)
) -> collegeData4
library(readr)
cl<-locale(grouping_mark = ",") # 創造cl來描述千分位符號使用","的習慣場景
collegeData %>%
mutate(
`日間∕進修別`=as.factor(`日間∕進修別`),
等級別=as.factor(等級別),
一年級男生=parse_number(一年級男生,na=c("","NA","-"),locale=cl),
一年級女生=parse_number(一年級女生,na=c("","NA","-"),locale=cl)
) -> collegeData4
problems(collegeData4$一年級男生)
collegeData$一年級男生[c(14,76,88)]
collegeData %>%
mutate(
`日間∕進修別`=as.factor(`日間∕進修別`),
等級別=as.factor(等級別),
一年級男生=parse_number(一年級男生,locale=cl),
一年級女生=parse_number(一年級女生,locale=cl),
一年級男生每千人=一年級男生/1000,
一年級女生每千人=一年級女生/1000
) -> collegeData5
collegeData %>%
select(一年級男生,一年級女生,
二年級男生, 二年級女生) -> college1stYearData
college1stYearData %>%
mutate(
一年級男生=parse_number(一年級男生,locale=cl),
一年級女生=parse_number(...),
二年級男生=parse_number(...),
二年級女生=parse_number(...)
)
college1stYearData %>%
mutate_all(
funs(
parse_number(.,locale=cl)
)
) ->college1stYearDataNumeric
head(college1stYearDataNumeric)
college1stYearDataNumeric %>%
mutate_all(
funs(
每百人=./100,
每千人=./1000
)
) -> college1stYearDataNumeric
college1stYearDataNumeric %>% colnames
# old writing
colnames(college1stYearDataNumeric)
collegeData %>% colnames
collegeData %>%
mutate_at(
vars(
contains("生")
),
funs(
parse_number(.,locale=cl,na=c("","NA","-"))
)
) -> collegeData5
collegeData5 %>% str
View(collegeData)
View(collegeData2)
knitr::opts_chunk$set(echo = TRUE)
collegeData$學校名稱 <-
collegeData$學校名稱 <-
collegeData$學校名稱 <-
library(readr)
collegeData <- read_csv("https://quality.data.gov.tw/dq_download_csv.php?nid=6231&md5_url=dda8fca407131483c1d8cbf3d61cf793")
collegeData$學校名稱 <-
collegeData$學校名稱 <-
library(dplyr)
mutate(
collegeData,
學校代碼=as.factor(學校代碼),
collegeData %>%
mutate(
學校代碼=as.factor(學校代碼),
knitr::opts_chunk$set(echo = TRUE)
libraryData$書籍館藏地 %>% as.factor %>% levels -> storageLocations
library(readr)
libraryData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/library100_102.csv")
libraryData$書籍館藏地 %>% as.factor %>% levels -> storageLocations
libraryData$書籍館藏地 %>% as.factor %>% levels -> storageLocations
libraryData$書籍館藏地 %>% as.factor %>% levels -> storageLocations
library(readr)
libraryData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/library100_102.csv")
library(readr)
libraryData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/library100_102.csv")
libraryData$書籍館藏地 %>% as.factor %>% levels -> storageLocations
install.packages("readr", dependencies = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(readr)
install.packages("readr", dependencies = FALSE)
library(readr)
library(readr)
library(readr)
library(readr)
library(readr)
library(readr)
libraryData$書籍館藏地 %>% as.factor %>% levels -> storageLocations
libraryData %>%
group_by(書籍館藏地) %>% # 依書籍館藏地不同形成不同subsample_i
summarise(
borrowCount=n() #每個subsample_i計算 borrowCount=nrow(subsample_i)
) -> result
libraryData %>%
select(讀者借閱冊數,書籍出版日期)
libraryData %>%
select(讀者借閱冊數,書籍出版日期) %>%
summarise(
讀者平均借閱冊數=mean(讀者借閱冊數),
最小書籍出版日期=min(書籍出版日期),
最大書籍出版日期=max(書籍出版日期)
)
